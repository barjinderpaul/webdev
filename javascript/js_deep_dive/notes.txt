Higher Order Functions :
A function is a higher order function if a function can take a function as an
argument or when a function can return a function, it is called higher order function.

Example of function as an argument- 
/*
function getFirstName(fullName) {
    return fullName.split(" ")[0];
}

function greet (findName, fullName) {
    let firstName = findName(fullName);
    console.log(`First name = ${firstName}`);
}

greet(getFirstName,"ABC World");
*/

Example of function returning a function - 
/*
function createGreetings(name) {
    let firsName = name.split(" ")[0];
    function greet(){
        console.log(`Hello ${firsName}`);
    }
    return greet;
}

let ABCgreeter = createGreetings("ABC World")
let XYZgreeter = createGreetings("XYZ World")

ABCgreeter()
XYZgreeter()
*/




CLOSURES;
Scope of outer function is preserved inside inner function. This scope is called the closure scope.

function a() {
    function b(){
        //variables of function 'a' are still accessable to function 'b' due to closure scope;
    }
}